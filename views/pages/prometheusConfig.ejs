<!DOCTYPE html>
<html lang="en">
  <head>
    <%- include('../partials/head') %>
    <script>
      let jsonData = {};
      let dataLength = 0;

      var row = 0;
      let counter = 0;

      var targets_arr = [];
      window.onload = function () {
        $('#btnAction').attr('disabled',true)
        $.ajax({
          url: "/PrometheusConfig/ReadFile",
          method: "GET",
          success: function (response) {
            if (response == "empty") {
              $("#tableHost").html("Host net set.");
              $("#btnAction").attr("onclick", "saveFile()");
            } else {
              const toJson = JSON.parse(response);
              console.log(toJson.collector.length);
              
              for (i = 0; i < toJson.collector.length; i++) {
                // let key_array = [];
                // key_array.push(toJson[`row${i}`][0]);
                // key_array.push(toJson[`row${i}`][1]);

                // console.log('key_array :'+key_array);

                // jsonData[`row${i}`] = key_array;
                targets_arr = toJson.collector[i].targets;
                $("#tableBodyHost").append(
                  `
                        <tr>
                            <th scope="row">${i + 1}</th>
                            <td>${toJson.collector[i].job_name}</td>
                            <td> <button class="btn btn-primary" onclick="ReadFileByName('${toJson.collector[i].job_name}',${i})">View</button></td>
                        </tr>
                        `
                );
                row++;counter++;

                $("#btnAction").attr("onclick", "saveFile()");
              }
            }
          },
          error: function (xhr, status, error) {
            console.error(xhr.responseText);
          },
        });
      };
    </script>
  </head>
  <body class="g-sidenav-show bg-gray-100">
    <div class="min-height-300 bg-dark position-absolute w-100"></div>
    <%- include('../partials/sidebar') %>
    <main class="main-content position-relative border-radius-lg">
      <%- include('../partials/nav') %>
      <div class="container-fluid py-4">
        <div class="row mt-4">
          <div class="col-lg-7 mb-lg-0 mb-4">
            <div class="card">
              <div class="card-header pb-0 p-3">
                <div class="d-flex justify-content-between">
                  <div class="row">
                    <div class=" col-1">
                      <a class="btn btn-icon-only btn-rounded btn-outline-dark mb-0 me-3 btn-md d-flex align-items-center justify-content-center" href="/"><i class="ni ni-bold-left" aria-hidden="true"></i></a> 
                    </div>
                    <div class="col-3 p-2">
                    
                        <img
                        src="/assets/img/monitor/prometheus.png"
                        width="100"
                        alt=""
                        srcset=""
                      />
               
                      
                    </div>
                    <div class=" col-8">
                      <h4>Prometheus Config</h4>
                      Support : Node-Exporter, Windows-Exporter, VMWare-Exporter
                      <br>
                      <a href="#" onclick="ReadFileYML()">
                        <i class="ni ni-bold-right" aria-hidden="true"></i> Open Engineer Mode
                      </a>
                    </div>
                  </div>
                </div>
              </div>
              <hr />
              <div class="p-3">
               <div class="row">
                <div id="GroupNameShow"></div>
                <div class="col col-md-2">
                  <b>Choose Collector</b>
                </div>
                <div class="col col-md-10">
                  <select class="form-select" style="width: 30%;" id="collectorList" onchange="addRow()">
                    <option selected>Collector</option>
                    <option value="linux">Linux_host</option>
                    <option value="windows">Windows_host</option>
                  </select>
                </div>
               </div>
              </div>
              <div class="table-responsive p-3">
                <table class="table align-items-center">
                  <thead>
                    <tr>
                      <th>Targets Host</th>
                      <th>Targets Port</th>
                      <th>Action</th>
                    </tr>
                  </thead>
                  <tbody id="table_body">
                  </tbody>
                </table>
              </div>
              <center>
                <input type="hidden" id="job_name_current" >
                <button class="btn btn-success btn-sm ms-auto" onclick="saveFile()" id="btnAction">
                  Save
                </button>
                <!-- <button
                  class="btn btn-primary btn-sm ms-auto"
                  onclick="addRow()"
                  id="btn_add_host"
                >
                  Add Collector
                </button> -->               
              </center>
            </div>
          </div>
          <div class="col-lg-5 mb-lg-0 mb-4">
            <div class="card">
              <div class="card-header pb-0 p-3">
                <h6 class="mb-2">Job Name on Prometheus.</h6>
                <div class="btn-group">
                  <button type="button" class="btn btn-danger dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
                    ACTIONS
                  </button>
                  <ul class="dropdown-menu">
                    <li><a class="dropdown-item" onclick="RunPrometheusOnDocker('prometheus')" href="#">Run Prometheus</a></li>
                    <li><a class="dropdown-item" id="btnInstall" onclick="RestartContainer('prometheus')" href="#">Restart Prometheus</a></li>
                  </ul>
                </div>
                
                <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#newGroupModal">
                  New Group
                </button>
              </div>
              <div class="card-body">
                <table class="table table-striped table-hover" id="tableGroup">
                  <thead>
                    <tr>
                      <th scope="col">#</th>
                      <th scope="col">Group</th>
                      <th scope="col">Action</th>
                    </tr>
                  </thead>
                  <tbody id="tableBodyHost"></tbody>
                </table>
              </div>
            </div>
          </div>
        </div>
        <div class="row mt-4" id="Console" tabindex="0">
          <div class="col-lg-12 mb-lg-0 mb-4">
            <div class="card">
              <div class="card-header pb-0 p-3 bg-dark">
                <h6 class="mb-2 text-light font-weight-bold">Console</h6>
              </div>
              <div class="card-body" style="background-color: black;">
               <pre class="text-info" id="output"></pre>
              </div>
            </div>
          </div>
        </div>
        <!-- Modal -->
        <div class="modal fade" id="newGroupModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
          <div class="modal-dialog">
            <div class="modal-content">
              <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Create new Group</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
              </div>
              <div class="modal-body">
                <div class="p-3">
                  <div class="row g-3 align-items-center">
                    <div class="col-auto">
                      <label for="job_name" class="col-form-label">Group name : </label>
                    </div>
                    <div class="col-md">
                      <input type="text" id="new_group_name" class="form-control">
                    </div>
                  </div>
                </div>
              </div>
              <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" onclick="createNewGroup()">Create</button>
              </div>
            </div>
          </div>
        </div>

        <div class="modal modal-dialog modal-lg fade" id="EngineerMode" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
          <div class="modal-dialog">
            <div class="modal-content">
              <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Engineer Mode</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
              </div>
              <div class="modal-body">
                <div class="p-3">
                  <div class="row g-3 align-items-center">
                   <textarea class="form-control text-success" style="background-color: black;" name="" id="text_editor" cols="30" rows="10"></textarea>
                  </div>
                </div>
              </div>
              <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" onclick="saveFileEnMode()" >Save</button>
              </div>
            </div>
          </div>
        </div>
        <script src="/socket.io/socket.io.js"></script>
        <script>
          var socket = io();
          // function RunPrometheusOnDocker() {
          //   $('#btnInstall').attr('disabled',true)
          //   $('#Console').focus()
          //   $('#output').append('Installing...')
          //   const command='docker run -d --name prometheus  -p 9090:9090 -v $(pwd)/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml prom/prometheus ';
          //   socket.emit('dataCMD', { cmd: command});
          //   socket.on('output', (data) => {
          //       const output = document.getElementById('output');
          //       output.innerHTML += data;
          //   });
          // }

          function RunPrometheusOnDocker(container_name) {
            $.ajax({
              url: "/DockerRun",
              method: "POST",
              data:{container_name : container_name},
              success: function (response) {
                console.log(response);
                $('#output').append(response)
              },
              error: function (xhr, status, error) {
                console.error(xhr.responseText);
                $('#output').append(xhr.responseText)
              },
            });
          }


          function createNewGroup(){
            
            let counter = 1;
            $("#tableGroup").append(
              `<tr>
                    <td>
                        ${counter}
                    </td>
                    <td>
                        ${$('#new_group_name').val()}
                    </td>
                    <td>
                        <button class="btn btn-primary" onclick="configTarget('${$('#new_group_name').val()}')">Config</button>
                    </td>
                </tr>`
            );
            counter++;
            $('#newGroupModal').modal('hide')
          }

          function configTarget(group_name){
            $('#table_body').empty()
            $('#btnAction').attr('disabled',false)
            $('#GroupNameShow').html('You are creating a group : '+group_name)
            $('#job_name_current').val(group_name)
            // console.log(targets_arr);
          }

          function addRow() {
            let collectorList = $('#collectorList').val();
            let path = "";
            let port = 0;
            if(collectorList == "linux"){
              path = "/LinuxConfig/ReadFile"
              port = 9100;
            }else if(collectorList == "windows"){
              path = "/WindowsConfig/ReadFile"
              port = 9182;
            }
            $.ajax({
              url: path,
              method: "GET",
              data: { type: "linux" },
              success: function (response) {
                if (response == "empty") {
                  $("#tableHost").html("Host net set.");
                  $("#btnAction").attr("onclick", "saveFile()");
                } else {
                  const toJson = JSON.parse(response);
                  
                  dataLength = Object.keys(toJson).length;
                  
                  $("#table_body").empty()
                  for (i = 0; i < Object.keys(toJson).length; i++) {
                    let key_array = [];
                    key_array.push(toJson[`row${i}`][0]);
                    key_array.push(toJson[`row${i}`][1]);

                    console.log('key_array :'+key_array);

                    jsonData[`row${i}`] = key_array;

                    row++;counter++;
                    $("#table_body").append(
                      `<tr id="row${i}">
                                <td id="row${i}col0">
                                    <input type="text" id="input_row${i}col0" class="form-control" value="${
                        JSON.parse(response)[`row${i}`][0]
                      }">
                                </td>
                                <td id="row${i}col1">
                                    <input type="text" id="input_row${i}col1" class="form-control" value="${
                       port
                      }">
                                </td>
                                <td id="row${i}col3">
                                    <a class="btn btn-link text-danger text-gradient px-3 mb-0" onclick="removeRow(${row})" href="#"><i class="far fa-trash-alt me-2" aria-hidden="true"></i>Remove</a>
                                </td>
                            </tr>`
                    );
                    $("#btnAction").attr("onclick", "saveFile()");
                  }
                }
              },
              error: function (xhr, status, error) {
                console.error(xhr.responseText);
              },
            });
          }

          function saveFileEnMode() {

            let config = $('#text_editor').val()
            console.log(config);
            $.ajax({
              url: "/PrometheusConfig/EnSaveFile",
              method: "POST",
              data: { cfg: config },
              success: function (response) {
                if (response == "ok") {
                  $('#EngineerMode').modal('hide')
                  alert("Saved.");
                }
              },
              error: function (xhr, status, error) {
                console.error(xhr.responseText);
              },
            });
          }

          var tempData = {}; // For remove '' becourse "'10.4.160.xx'"
          function saveFile() {
            let new_job ;
            let job_name = $('#job_name_current').val()
            console.log("row = " + row);
            console.log("connter = " + counter);
            if (row == 0) {
                jsonData = {};
            } else {
              let key_array = [];
              let key_array_temp = [];
              for (c = 0; c <= counter; c++) {
                if ($(`#input_row${c}col${0}`).val() === undefined) {
                } else {
                  let host  = "'"+$(`#input_row${c}col${0}`).val()+":";
                  let port = $(`#input_row${c}col${1}`).val()+"'";

                  // for write json file
                  let hostjson  = $(`#input_row${c}col${0}`).val()+":";
                  let portjson = $(`#input_row${c}col${1}`).val();

                  key_array.push(`${host+port}`);
                  key_array_temp.push(`${hostjson+portjson}`);
                  console.log(key_array);
                  new_job = ` 
                  \n
  - job_name: ${job_name} 
    scrape_interval: 5s
    static_configs:
      - targets: [${key_array}]`;

                  jsonData['job_name'] = job_name;
                  jsonData['targets'] = key_array;

                  tempData['job_name'] = job_name;
                  tempData['targets'] = key_array_temp;

                  $('#output').append(jsonData);
     
                }
              }
            }
            //console.log(new_job);
            //console.log(jsonData); //obj

            $.ajax({
              url: "/PrometheusConfig/SaveFile",
              method: "POST",
              data: { text: new_job , text_obj:jsonData , tempData : tempData},
              success: function (response) {
                if (response == "ok") {
                  alert("Ok");
                }
              },
              error: function (xhr, status, error) {
                console.error(xhr.responseText);
              },
            });
          }


          function removeRow(row){
            console.log('removeRow '+row);
            counter = counter - 1; 
            $(`#row${row-1}`).remove(0); 
       
            delete jsonData[`row${row-1}`];
            console.log(jsonData);
          }


          function ReadFileByName(JobName,index){
              $('#btn_add_host').attr('disabled',true)
              $('#btnAction').attr('disabled',true)
              $.ajax({
                url: "/PrometheusConfig/ReadFileByName",
                data:{job_index:index},
                method: "POST",
                success: function (response) {
                  if (response == "empty") {
                     //$("#tableHost").html("Host net set.");
                     //$("#btnAction").attr("onclick", "saveFile()");
                  } else {
                    const prepareJson = JSON.stringify(response);
                    const toJson = JSON.parse(prepareJson)
                    //console.log(JSON.parse(toJson));
                   
                    for (i = 0; i < toJson.targets.length; i++) {
                      const host_ip = toJson.targets[i].split(":")[0];
                      const port = toJson.targets[i].split(":")[1];
                      $("#table_body").append(
                          `<tr id="row${i}">
                                <td id="row${i}col0">
                                    <input type="text" id="input_row${i}col0" class="form-control" value="${host_ip}">
                                </td>
                                <td id="row${i}col1">
                                    <input type="text" id="input_row${i}col1" class="form-control" value="${port}">
                                </td>
                                <td id="row${i}col3">
                                    <a class="btn btn-link text-danger text-gradient px-3 mb-0"  href="#">Curl</a>
                                </td>
                            </tr>`
                        );
                    }
                  }
                },
                error: function (xhr, status, error) {
                  console.error(xhr.responseText);
                },
              });
          }

          function ReadFileYML(){
              $.ajax({
                url: "/PrometheusConfig/ReadFileYML",
                method: "GET",
                success: function (response) {
                  console.log(response);
                  if (response == "empty") {

                  } else {
                    console.log(response);
                    $('textarea#text_editor').val(response)
                  }
                },
                error: function (xhr, status, error) {
                  console.error(xhr.responseText);
                },
              });

              $('#EngineerMode').modal('show')
          }
        
          function RestartContainer(container_name) {
            
            $.ajax({
              url: "/DockerRestart",
              method: "POST",
              data:{container_name : container_name},
              success: function (response) {
                console.log(response);
                $('#output').append(response)
              },
              error: function (xhr, status, error) {
                console.error(xhr.responseText);
                $('#output').append(xhr.responseText)
              },
            });
          }

        </script>
        <%- include('../partials/footer') %>
      </div>
    </main>
  </body>
</html>
