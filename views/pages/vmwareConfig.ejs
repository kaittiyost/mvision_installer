<!DOCTYPE html>
<html lang="en">
  <head>
    <%- include('../partials/head') %>
    <script>
      let jsonData = {};
      let dataLength = 0;

      var row = 0;
      let counter = 0;
      $( document ).ready(function() {
        $('#btnAction').attr('disabled',true)

      })
    </script>
  </head>
  <body class="g-sidenav-show bg-gray-100">
    <div class="min-height-300 bg-dark position-absolute w-100"></div>
    <%- include('../partials/sidebar') %>
    <main class="main-content position-relative border-radius-lg">
      <%- include('../partials/nav') %>
      <div class="container-fluid py-4">
        <div class="row mt-4">
          <div class="col-lg mb-lg-0 mb-4">
            <div class="card">
              <div class="card-header pb-0 p-3">
                <div class="d-flex justify-content-between">
                  <div class="row">
                    <div class=" col-2">
                      <a class="btn btn-icon-only btn-rounded btn-outline-dark mb-0 me-3 btn-md d-flex align-items-center justify-content-center" href="/"><i class="ni ni-bold-left" aria-hidden="true"></i></a> 
                    </div>
                    <div class="col-3 p-2">
                    
                        <img
                        src="/assets/img/monitor/vsphere.png"
                        width="80"
                        alt=""
                        srcset=""
                      />
                    </div>
                    <div class=" col-7">
                      <h4>Vsphere Config</h4>
                      Support : Vsphere Client                   
                    </div>
                  </div>
                </div>
              </div>
              <div class="card-header pb-0 p-3">
                <h6 class="mb-2">Host Vsphere on Vmware-Exporter.</h6>
                <button type="button" class="btn btn-dark" data-bs-toggle="modal" data-bs-target="#newGroupModal">
                  New Host
                </button>
                <br>
                      <a href="#" onclick="ReadFileJSON()">
                        <i class="ni ni-bold-right" aria-hidden="true"></i> Open Engineer Mode
                      </a>
              </div>
              <div class="table-responsive">
                <table class="table align-items-center">
                  <thead class="table-dark">
                    <tr>
                      <th>IP Host</th>
                      <th>Username</th>
                      <th>Password</th>
                      <th>OS</th>
                      <th>Distrubution</th>
                      <th>Protocol</th>
                      <th>Action</th>
                    </tr>
                  </thead>
                  <tbody style="text-align: center;" id="table_body">
                    <% let i = 0; if ( HostList.length > 0 ) { %>
                        <% HostList.forEach ( function ( reccord, index ) { %>
                            <tr id="row<%= reccord.host_id %>">
                                <td>
                                    <%= reccord.host_ip %>
                                </td>
                                <td>
                                    <%= reccord.host_username; %>
                                </td>
                                <td>
                                  <div class="badge bg-gradient-secondary">**********</div>
                                </td>
                                <td>
                                    <%= reccord.host_os; %>
                                </td>
                                <td>
                                    <%= reccord.host_os_type; %>
                                </td>
                                <td>
                                    <%= reccord.host_protocol; %>
                                </td>
                                <td>
                                  <a class="btn btn-link text-danger text-gradient px-3 mb-0" onclick="delHost('<%= reccord.host_ip; %>','<%= reccord.host_id; %>')" href="#"><i class="far fa-trash-alt me-2" aria-hidden="true"></i>Remove</a>
                                </td>
                            </tr>
                        <% } ); %>
                    <% } else { %>
                        <tr>
                            <td colspan="100%">- ไม่มีข้อมูล -</td>
                        </tr>
                    <% } %>            
                </tbody>
                </table>
              </div>
              <center>
                <button class="btn btn-success btn-sm ms-auto" id="" onclick="addHost()">
                  Save
                </button>
                <button
                  class="btn btn-primary btn-sm ms-auto"
                  onclick="addRow()"
                >
                  Add Host
                </button>
              </center>
            </div>
          </div>
        </div>
        <div class="row mt-4" id="Console" tabindex="0">
          <div class="col-lg-12 mb-lg-0 mb-4">
            <div class="card">
              <div class="card-header pb-0 p-3 bg-dark">
                <h6 class="mb-2 text-light font-weight-bold">Console</h6>
              </div>
              <div class="card-body" style="background-color: black;">
               <pre class="text-info" id="output"></pre>
              </div>
            </div>
          </div>
        </div>
        <!-- Modal -->
        <div class="modal fade" id="newGroupModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
          <div class="modal-dialog">
            <div class="modal-content">
              <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Create new Host</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
              </div>
              <div class="modal-body">
                <div class="p-3">
                  <div class="row g-3 align-items-center">
                   <table>
                    <tr>
                        <th>HostIP</th>
                        <td><input type="text" class="form-control" id="hostip"></td>
                    </tr>
                    <tr>
                        <th>Username</th>
                        <td><input type="text" class="form-control" id="username"></td>
                    </tr>
                    <tr>
                        <th>Password</th>
                        <td><input type="password" class="form-control" id="password"></td>
                    </tr>
                    <tr>
                        <th>Port</th>
                        <td><input type="number" class="form-control" value="9272" id="port"></td>
                    </tr>
                   </table>
                  </div>
                </div>
              </div>
              <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" onclick="createNewHost()">Create</button>
              </div>
            </div>
          </div>
        </div>

        <div class="modal modal-dialog modal-lg fade" id="EngineerMode" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
          <div class="modal-dialog">
            <div class="modal-content">
              <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Engineer Mode</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
              </div>
              <div class="modal-body">
                <div class="p-3">
                  <div class="row g-3 align-items-center">
                   <textarea class="form-control text-success" style="background-color: black;" name="" id="text_editor" cols="30" rows="20"></textarea>
                  </div>
                </div>
              </div>
              <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" onclick="saveFileEnMode()" >Save</button>
              </div>
            </div>
          </div>
        </div>
        <div class="modal modal-dialog modal-lg fade" id="EngineerModeJobConfig" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
          <div class="modal-dialog">
            <div class="modal-content">
              <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Engineer Mode Job Config</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
              </div>
              <div class="modal-body">
                <div class="p-3">
                  <div class="row g-3 align-items-center">
                   <textarea class="form-control text-success" style="background-color: black;" name="" id="text_editor_job" cols="30" rows="10"></textarea>
                  </div>
                </div>
              </div>
              <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" onclick="saveJsonFileEnMode()" >Save</button>
              </div>
            </div>
          </div>
        </div>

        <script src="/socket.io/socket.io.js"></script>
        <script>
          var socket = io();
          
          function addRow() {
            $("#table_body").append(
              `<tr id="row${row}">
                    <td id="row${row}col0">
                        <input type="text" id="input_row${row}col0" class="form-control">
                    </td>
                    <td id="row${row}col1">
                        <input type="text" id="input_row${row}col1" class="form-control">
                    </td>
                    <td id="row${row}col2">
                      <input type="text" id="input_row${row}col2" class="form-control">
                    </td>
                    <td id="row${row}col3">
                        <input type="text" id="input_row${row}col3" value="Vmware" disabled  class="form-control">
                    </td>
                    <td id="row${row}col4">
                      <select class="form-control" name="os_type" id="input_row${row}col4" id="os_type">
                        <option value="vsphere">Vsphere</option>
                      </select>
                    </td>
                    <td id="row${row}col5">
                      <input type="text" id="input_row${row}col5" value="http" disabled  class="form-control">
                    </td>
                    <td id="row${row}col6">
                        <a class="btn btn-link text-danger text-gradient px-3 mb-0" onclick="removeRow(${row})" href="#"><i class="far fa-trash-alt me-2" aria-hidden="true"></i>Remove</a>
                    </td>
                </tr>`
            );
            row++;
            counter++;
            console.log("counter =" + counter);
          }

          function addHost(){
            console.log(`size : ${counter}`);
          
            let host_ip="",host_os,host_os_type,username,password,protocol;
            let data_arr = [];
            for(i=0 ; i< counter; i++){
              host_ip = $(`#input_row${i}col${0}`).val();
              username = $(`#input_row${i}col${1}`).val();
              password = $(`#input_row${i}col${2}`).val();
              os = $(`#input_row${i}col${3}`).val();
              os_type = $(`#input_row${i}col${4}`).val();
              protocol = $(`#input_row${i}col${5}`).val();
              data_arr.push([host_ip,username,password,os,os_type,protocol])

            }
            // console.log(data_arr);
            $.ajax({
              url: "/vmware/add",
              method: "POST",
              data: { data : data_arr },
              success: function (response) {
                alert(response)
                if (response == "ok") {
                  location.reload();
                  //alert("Linux host is ready.");
                  // Swal.fire({
                  //   icon: 'success',
                  //   title: 'Hosts changes saved.',
                  //   text: 'Successfully saved to the windows_host file.',
                  // }).then(()=>{
                  //   // location.reload();
                  // })
                }
              },
              error: function (xhr, status, error) {
                console.error(xhr.responseText);
              },
            });
          }

          function delHost(ip,id){
            $.ajax({
              url: "/vmware/del",
              method: "POST",
              data: { ipaddr : ip },
              success: function (response) {
                if (response == "ok") {
                  //alert("Linux host is ready.");
                  $(`#row${id}`).remove()
                }
              },
              error: function (xhr, status, error) {
                console.error(xhr.responseText);
              },
            });
          }


          function RunContainer(container_name) {

            const hostip = $('#hostip').val()
            const username = $('#username').val()
            const password = $('#password').val()
            const port = $('#port').val()

            $('#output').append(`Running Container ${container_name}.. \n`)
            $.ajax({
              url: "/DockerRun",
              method: "POST",
              data:{
                container_name : container_name,
                hostip : hostip,
                username : username,
                password : password,
                port : port
                },
              success: function (response) {
                console.log(response);
                $('#output').append(response)

                $('#table_docker_reunned').append(
                    `<tr>
                        <td>${$('#hostip').val()}</td>
                        <td>${$('#port').val()}</td>
                        <td>
                            <button class="btn btn-primary" onclick="CurlExporter('vmware_exporter')">Run</button>
                        </td>
                    </tr>`
                )
                let dataToJson = {}
                dataToJson[$('#hostip').val()] = {
                    "USERNAME":$('#username').val(),
                    "PASSWORD":$('#password').val(),
                    "PORT":$('#port').val(),
                    "SERVICE_NAME": `vmware_${$('#port').val()}`
                }
                $.ajax({
                    url: "/VmwareConfig/SaveFile",
                    method: "POST",
                    data: { data: dataToJson,hostip:$('#hostip').val()},
                    success: function (response) {
                        if (response == "ok") {
                        //alert("Ok");
                        Swal.fire({
                            icon: 'success',
                            title: 'Containers is ran.',
                            text: 'Successfully run container vmware_exporter.',
                        }).then(()=>{
                            location.reload();
                        })
                        }
                    },
                    error: function (xhr, status, error) {
                        console.error(xhr.responseText);
                    },
                    });

              },
              error: function (xhr, status, error) {
                console.error(xhr.responseText);
                $('#output').append(xhr.responseText)
              },
            });

          }


          function createNewHost(){
            
            let counter = 1;
            $("#tableBodyHost").append(
              `<tr>
                    <td>
                        ${counter}
                    </td>
                    <td>
                        ${$('#hostip').val()}
                    </td>
                    <td>
                        ${$('#username').val()}
                    </td>
                    <td>
                        ${$('#port').val()}
                    </td>
                    <td>
                        <button class="btn btn-outline-dark" onclick="RunContainer('vmware_exporter')">Run</button>
                    </td>
                </tr>`
            );
            counter++;
            $('#newGroupModal').modal('hide')
          }

          function CurlExporter(ipaddress) {
            //$('#btnInstall').attr('disabled',true)
            $('#Console').focus()
            $('#output').append('curl... ['+ipaddress+':9100] \n')
            $.ajax({
              url: "/CurlExporter",
              method: "POST",
              data:{ipaddr:ipaddress,os_type:'linux'},
              success: function (response) {
                console.log(response);
                $('#output').append(response)
              },
              error: function (xhr, status, error) {
                console.error(xhr.responseText);
                $('#output').append(xhr.responseText)
              },
            });
          }

          function configTarget(group_name){
            $('#table_body').empty()
            $('#btnAction').attr('disabled',false)
            $('#GroupNameShow').html('You are creating a group : '+group_name)
            $('#job_name_current').val(group_name)
            // console.log(targets_arr);
          }

          function saveFileEnMode() {

            let config = $('#text_editor').val()
            console.log(config);
            $.ajax({
              url: "/PrometheusConfig/EnSaveFile",
              method: "POST",
              data: { cfg: config },
              success: function (response) {
                if (response == "ok") {
                  $('#EngineerMode').modal('hide')
                  //alert("Saved.");
                  Swal.fire({
                    icon: 'success',
                    title: 'Job changes saved.',
                    text: 'Successfully saved to the prometheus.yml file.',
                  }).then(()=>{
                    location.reload();
                  })
                }
              },
              error: function (xhr, status, error) {
                console.error(xhr.responseText);
              },
            });
          }

          function saveJsonFileEnMode() {

            let config = $('#text_editor_job').val()
            console.log(config);
            $.ajax({
              url: "/VmwareConfig/EnSaveJsonFile",
              method: "POST",
              data: { cfg: config },
              success: function (response) {
                if (response == "ok") {
                  $('#EngineerModeJobConfig').modal('hide')
                  //alert("Saved.");
                  Swal.fire({
                    icon: 'success',
                    title: 'Vsphere changes saved.',
                    text: 'Successfully saved to the vmware_host.json file.',
                  }).then(()=>{
                    location.reload();
                  })
                }
              },
              error: function (xhr, status, error) {
                console.error(xhr.responseText);
              },
            });
            }

          var tempData = {}; // For remove '' becourse "'10.4.160.xx'"
          function saveFile() {
            let new_job ;
            let job_name = $('#job_name_current').val()
            console.log("row = " + row);
            console.log("connter = " + counter);
            if (row == 0) {
                jsonData = {};
            } else {
              let key_array = [];
              let key_array_temp = [];
              for (c = 0; c <= counter; c++) {
                if ($(`#input_row${c}col${0}`).val() === undefined) {
                } else {
                  let host  = "'"+$(`#input_row${c}col${0}`).val()+":";
                  let port = $(`#input_row${c}col${1}`).val()+"'";

                  // for write json file
                  let hostjson  = $(`#input_row${c}col${0}`).val()+":";
                  let portjson = $(`#input_row${c}col${1}`).val();

                  key_array.push(`${host+port}`);
                  key_array_temp.push(`${hostjson+portjson}`);
                  console.log(key_array);
                  new_job = ` 
                  \n
  - job_name: ${job_name} 
    scrape_interval: 5s
    static_configs:
      - targets: [${key_array}]`;

                  jsonData['job_name'] = job_name;
                  jsonData['targets'] = key_array;

                  tempData['job_name'] = job_name;
                  tempData['targets'] = key_array_temp;

                  $('#output').append(jsonData);
     
                }
              }
            }
            //console.log(new_job);
            //console.log(jsonData); //obj

            $.ajax({
              url: "/PrometheusConfig/SaveFile",
              method: "POST",
              data: { text: new_job , text_obj:jsonData , tempData : tempData},
              success: function (response) {
                if (response == "ok") {
                  //alert("Ok");
                  Swal.fire({
                    icon: 'success',
                    title: 'Job changes saved.',
                    text: 'Successfully saved to the prometheus.yml file.',
                  }).then(()=>{
                    location.reload();
                  })
                }
              },
              error: function (xhr, status, error) {
                console.error(xhr.responseText);
              },
            });
          }

          function ReadFileByName(JobName,index){
              $('#btn_add_host').attr('disabled',true)
              $('#btnAction').attr('disabled',true)
              $.ajax({
                url: "/PrometheusConfig/ReadFileByName",
                data:{job_index:index},
                method: "POST",
                success: function (response) {
                  if (response == "empty") {
                     //$("#tableHost").html("Host net set.");
                     //$("#btnAction").attr("onclick", "saveFile()");
                  } else {
                    const prepareJson = JSON.stringify(response);
                    const toJson = JSON.parse(prepareJson)
                    //console.log(JSON.parse(toJson));
                   
                    for (i = 0; i < toJson.targets.length; i++) {
                      const host_ip = toJson.targets[i].split(":")[0];
                      const port = toJson.targets[i].split(":")[1];
                      $("#table_body").append(
                          `<tr id="row${i}">
                                <td id="row${i}col0">
                                    <input type="text" id="input_row${i}col0" class="form-control" value="${host_ip}">
                                </td>
                                <td id="row${i}col1">
                                    <input type="text" id="input_row${i}col1" class="form-control" value="${port}">
                                </td>
                                <td id="row${i}col3">
                                    <a class="btn btn-link text-danger text-gradient px-3 mb-0"  href="#">Curl</a>
                                </td>
                            </tr>`
                        );
                    }
                  }
                },
                error: function (xhr, status, error) {
                  console.error(xhr.responseText);
                },
              });
          }


          function ReadFileJSON(){
              $.ajax({
                url: "/VmwareConfig/ReadFileJSON",
                method: "GET",
                success: function (response) {
                  console.log(response);
                  if (response == "empty") {

                  } else {
                    console.log(response);
                    $('textarea#text_editor_job').val(response)
                  }
                },
                error: function (xhr, status, error) {
                  console.error(xhr.responseText);
                },
              });

              $('#EngineerModeJobConfig').modal('show')
          }

          function RestartContainer(container_name) {
            
            $.ajax({
              url: "/DockerRestart",
              method: "POST",
              data:{container_name : container_name},
              success: function (response) {
                //console.log(response);
                $('#output').append(response)
                Swal.fire({
                    icon: 'success',
                    title: `${container_name} is restarted.`,
                    text: response,
                  }).then(()=>{
                    location.reload();
                  })
              },
              error: function (xhr, status, error) {
                console.error(xhr.responseText);
                $('#output').append(xhr.responseText)
              },
            });
          }

          function StopContainer(container_name) {
            $('#output').append(`${container_name} stopping...`)
            $.ajax({
              url: "/DockerStop",
              method: "POST",
              data:{container_name : container_name},
              success: function (response) {
                //console.log(response);
                $('#output').append(response)
                Swal.fire({
                    icon: 'success',
                    title: `${container_name} is stopped.`,
                    text: response,
                  }).then(()=>{
                    location.reload();
                  })
              },
              error: function (xhr, status, error) {
                console.error(xhr.responseText);
                $('#output').append(xhr.responseText)
              },
            });
          }

        </script>
        <%- include('../partials/footer') %>
      </div>
    </main>
  </body>
</html>
